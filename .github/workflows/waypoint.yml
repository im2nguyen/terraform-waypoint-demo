name: "Waypoint"

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  WAYPOINT_SERVER_TLS: 1
  WAYPOINT_SERVER_TLS_SKIP_VERIFY: 1

jobs:
  waypoint:
    name: "waypoint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: im2nguyen/action-waypoint@main
        with:
          version: "0.2.0"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          waypoint_server_address: "a25a6938f5ac54ae8a03e29db4a90dda-290552862.us-east-2.elb.amazonaws.com:9701"
          waypoint_server_token: ${{ secrets.WAYPOINT_SERVER_TOKEN }}
      - name: Build
        uses: im2nguyen/action-waypoint@main
        with:
          operation: build
          version: "0.2.0"
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set KubeConfig
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
        id: setcontext
      - name: Deploy
        uses: im2nguyen/action-waypoint@main
        with:
          operation: deploy
          version: "0.2.0"
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: im2nguyen/action-waypoint@main
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          operation: release
          version: "0.2.0"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workspace: default
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2
    #   - name: Setup Terraform
    #     uses: hashicorp/setup-terraform@v1
    #     with:
    #       cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    #       # terraform_version: 0.13.0
    #   - name: Terraform Format
    #     id: fmt
    #     run: terraform fmt -check
    #   - name: Terraform Init
    #     id: init
    #     run: terraform init
    #   - name: Terraform Plan
    #     id: plan
    #     if: github.event_name == 'pull_request'
    #     run: terraform plan -no-color
    #     continue-on-error: true
    #   - uses: actions/github-script@0.9.0
    #     if: github.event_name == 'pull_request'
    #     env:
    #       PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
    #     with:
    #       github-token: ${{ secrets.GITHUB_TOKEN }}
    #       script: |
    #         const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
    #         #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
    #         #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
    #         <details><summary>Show Plan</summary>
    #         \`\`\`${process.env.PLAN}\`\`\`
    #         </details>
    #         *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
    #         github.issues.createComment({
    #           issue_number: context.issue.number,
    #           owner: context.repo.owner,
    #           repo: context.repo.repo,
    #           body: output
    #         })
    #   - name: Terraform Plan Status
    #     if: steps.plan.outcome == 'failure'
    #     run: exit 1
    #   - name: Terraform Apply
    #     if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    #     run: terraform apply -auto-approve
